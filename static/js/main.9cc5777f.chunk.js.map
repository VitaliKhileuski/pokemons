{"version":3,"sources":["services/api-service/api-service.js","components/pokemon-list-item/index.js","components/pokemon-list-item/pokemon-list-item.js","components/pokemons-list/index.js","components/pokemons-list/pokemon-list.js","components/pokemon-info/index.js","components/pokemon-info/pokemon-info.js","components/pokemon-filter/index.js","components/pokemon-filter/pokemon-filter.js","components/app/app.js","index.js"],"names":["ApiService","this","_apiBase","a","firstPokemons","fetch","then","response","json","pokemons","func","getAllPokemons","i","results","length","GetPokemonByURL","url","pokemon","currentPokemon","data","Pokemons","allPokemons","fetchPokemonData","id","push","ok","res","SetPokemons","count","number","PokemonListItem","props","apiservice","state","pokemonUrl","loading","GetPokemon","name","listItem","className","onClick","src","sprites","other","dream_world","front_default","alt","Component","PokemonList","pagePokemons","pokemonListItem","allTypes","startIndex","endIndex","currentPageIndex","term","filter","currentType","NextItems","bind","PreviosItems","setState","types","includes","type","SetPokes","prevProps","updateTerm","newPagePokemons","slice","items","item","indexOf","e","target","outerText","newItems","j","visiblePoKemons","FilterByType","searchPokemon","elements","undefined","GetType","value","href","startInd","endInd","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","PokemonInfo","onPokemonLoaded","abilities","stats","stat","base_stat","map","is_hidden","ability","slot","disabled","toUpperCase","info","height","weight","PokemonFilter","onUpdateSearch","placeholder","onChange","App","onPokemonsLoaded","GetFirstPokemons","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cc5777f.chunk.js","sourcesContent":["\r\nexport default class ApiService {\r\n    constructor() {\r\n        this._apiBase = 'https://pokeapi.co/api/v2';\r\n    }\r\n      async GetFirstPokemons(){\r\n          let firstPokemons = {};\r\n        await fetch('https://pokeapi.co/api/v2/pokemon?limit=9&offset=0')\r\n        .then(response => response.json())\r\n        .then(pokemons => {\r\n         \r\n            firstPokemons = pokemons;\r\n        \r\n        });\r\n        return firstPokemons;\r\n       }\r\n\r\n       async SetPokemons(func) {\r\n         const pokemons =  this.getAllPokemons();\r\n         for(let i=0; i<pokemons.results.length; i++){\r\n             func(await this.GetPokemonByURL(pokemons.results[i].url))\r\n             \r\n         }\r\n       }\r\n\r\n       \r\n       async GetPokemonByURL(url){\r\n           let pokemon = {}\r\n        await fetch(url)\r\n        .then(response => response.json())\r\n        .then(currentPokemon => {\r\n            pokemon = currentPokemon;\r\n        });\r\n\r\n          return pokemon;\r\n       }\r\n       async getAllPokemons() {\r\n        const data = [];\r\n        let Pokemons = [];\r\n        await fetch('https://pokeapi.co/api/v2/pokemon?limit=1118')\r\n            .then(response => response.json())\r\n            .then(allPokemons => {\r\n                Pokemons = allPokemons;\r\n                \r\n            });\r\n        for (let i = 0; i < Pokemons.results.length; i++) {\r\n            let currentPokemon = await this.fetchPokemonData(Pokemons.results[i])\r\n            if (!!currentPokemon.id) {\r\n                data.push(currentPokemon);\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n    async fetchPokemonData(pokemon) {\r\n        let url = pokemon.url;\r\n        const res =  await fetch(url)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n        return res;\r\n    }\r\n}\r\nexport async function SetPokemons(count) {\r\n        return await GetPokemonByURL(count);\r\n  }\r\n\r\n  async function GetPokemonByURL(number){\r\n    let pokemon = {}\r\n    let url = `https://pokeapi.co/api/v2/pokemon/${number}`\r\n await fetch(url)\r\n .then(response => response.json())\r\n .then(currentPokemon => {\r\n     pokemon = currentPokemon;\r\n });\r\n\r\n   return pokemon;\r\n}\r\n\r\nasync function getAllPokemons() {\r\n const data = [];\r\n let Pokemons = [];\r\n await fetch('https://pokeapi.co/api/v2/pokemon?limit=1118')\r\n     .then(response => response.json())\r\n     .then(allPokemons => {\r\n         Pokemons = allPokemons;\r\n         \r\n     });\r\n for (let i = 0; i < Pokemons.results.length; i++) {\r\n     let currentPokemon = await fetchPokemonData(Pokemons.results[i])\r\n     if (!!currentPokemon.id) {\r\n         data.push(currentPokemon);\r\n     }\r\n }\r\n return data;\r\n}\r\n\r\nasync function fetchPokemonData(pokemon) {\r\n let url = pokemon.url;\r\n const res =  await fetch(url)\r\n     .then(response => {\r\n         if (response.ok) {\r\n             return response.json();\r\n         } else {\r\n             return null;\r\n         }\r\n     });\r\n return res;\r\n}","import PokemonListItem from './pokemon-list-item';\r\nexport default PokemonListItem;","import React, {Component} from 'react'\r\nimport ApiService from '../../services/api-service/api-service';\r\n\r\nexport default class PokemonListItem extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pokemonUrl : 'https://pokeapi.co/api/v2/pokemon/1/',\r\n            pokemon : this.props.pokemon,\r\n            loading : true\r\n        }\r\n    }\r\n     \r\n\r\n    apiservice = new ApiService();\r\n    // onPokemonLoaded = (currentPokemon) => {\r\n    //     this.setState({\r\n    //         pokemon: currentPokemon,\r\n    //         loading: false\r\n    //     });\r\n    // }\r\n\r\n    // componentDidMount() {\r\n    //     this.apiservice.GetPokemonByURL(this.state.pokemonUrl)\r\n    //             .then(pokemons => this.onPokemonLoaded(pokemons));\r\n    // }\r\n    \r\n    render(){\r\n        //<img src={pokemon.sprites.other.dream_world.front_default} alt=''></img>\r\n        const {GetPokemon} = this.props;\r\n        const {name} = this.props.pokemon;\r\n        const {pokemon} = this.state;\r\n        const listItem = <div className='list-inline-item list-group-item-info' key={pokemon.id} onClick={GetPokemon}><img src={pokemon.sprites.other.dream_world.front_default} alt='no img'></img><label>{name}</label></div> \r\n        return (\r\n            <>\r\n                {listItem}\r\n            </>\r\n        )\r\n    }\r\n\r\n}","import PokemonList from './pokemon-list';\r\n\r\nexport default PokemonList;","import React, {Component} from 'react'\r\nimport PokemonListItem from '../pokemon-list-item';\r\nimport ApiService from '../../services/api-service/api-service.js'\r\nimport {SetPokemons} from '../../services/api-service/api-service.js'\r\nimport './pokemon-list.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\nexport default class PokemonList extends Component{\r\n    constructor(props){\r\n        \r\n        super(props);\r\n        this.state = {\r\n            allPokemons : [],\r\n            pagePokemons : [],\r\n            pokemonListItem : [],\r\n            allTypes: [\"all types\"],\r\n            startIndex : 0,\r\n            endIndex : 9,\r\n            currentPageIndex : 1,\r\n            loading : true,\r\n            count : 11000,\r\n            term : '',\r\n            filter : '',\r\n            currentType : 'all types'\r\n\r\n        }\r\n        this.NextItems = this.NextItems.bind(this);\r\n        this.PreviosItems = this.PreviosItems.bind(this);\r\n    }   \r\n    apiservice = new ApiService();\r\n\r\n    async SetPokes(){\r\n         for(let i=1; i<=this.state.count;i++){\r\n                if(i===898){\r\n                        this.setState({count : 10220})\r\n\r\n                }\r\n             let pokemon = await SetPokemons(i);\r\n             for(let i =0 ;i<pokemon.types.length;i++){\r\n                if(!(this.state.allTypes.includes(pokemon.types[i].type.name))){\r\n                    \r\n                    this.setState({allTypes: [...this.state.allTypes ,pokemon.types[i].type.name]});\r\n    \r\n                }\r\n             }\r\n             \r\n            this.setState({allPokemons: [...this.state.allPokemons , pokemon]});\r\n            if(i===898){\r\n                i=10000;\r\n            }\r\n\r\n         }\r\n     }\r\n    async componentDidMount(){\r\n       await this.SetPokes()\r\n    }\r\n\r\n    updateTerm(term) {\r\n        \r\n        this.setState({\r\n            term,\r\n            currentPageIndex : 1\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.term !== prevProps.term) {\r\n            this.updateTerm(this.props.term);\r\n        }\r\n    }\r\n\r\n    PreviosItems(){\r\n            if(this.state.currentPageIndex<2){\r\n                return;\r\n            }\r\n            else{\r\n                this.setState({currentPageIndex : this.state.currentPageIndex-1})\r\n            }\r\n    }\r\n\r\n    NextItems(){\r\n        if(this.state.currentPageIndex*9<this.state.allPokemons.length){\r\n            this.setState({currentPageIndex : this.state.currentPageIndex+1}) \r\n        }\r\n        else{\r\n            return;\r\n        }\r\n    }\r\n\r\n    SetNewListOfPokemons(){\r\n        const {startIndex, endIndex, allPokemons} = this.state;\r\n        let newPagePokemons = allPokemons.slice(startIndex, endIndex + 1)\r\n        this.setState(() => {\r\n            return (\r\n                {\r\n                    pagePokemons : newPagePokemons\r\n                }\r\n            )\r\n        })\r\n    }\r\n    searchPokemon(items,term) {\r\n        if (term === ''){\r\n            return items;\r\n        }\r\n        else{\r\n           return items.filter((item) => item.name.indexOf(term) > -1);\r\n        }\r\n    }\r\n    \r\n    GetType(e){\r\n        this.setState({currentType : e.target.outerText});\r\n        this.setState({currentPageIndex: 1});\r\n    }\r\n    FilterByType(items) {\r\n        let newItems = [] \r\n        for(let i=0; i<items.length;i++){\r\n            for(let j=0; j<items[i].types.length;j++){\r\n                if(this.state.currentType===\"all types\"){\r\n                    return items;\r\n                }\r\n                else if(this.state.currentType===items[i].types[j].type.name){\r\n                    newItems.push(items[i]);\r\n                }   \r\n            }\r\n        }\r\n        return newItems;\r\n        \r\n    }\r\nrender(){\r\n    const types= [];\r\n    const {allPokemons,term} = this.state\r\n    const visiblePoKemons = this.FilterByType(this.searchPokemon(allPokemons, term,));\r\n    let elements = [];\r\n    const {GetPokemon} = this.props;\r\n    if(this.state.allTypes!==undefined){\r\n        for(let i=0; i<=this.state.allTypes.length;i++){\r\n        \r\n            types.push(<a key={i} onClick={(e) => this.GetType(e)} value={this.state.allTypes[i]} className=\"dropdown-item\" href=\"#\">{this.state.allTypes[i]}</a>)\r\n        }\r\n    }\r\n    \r\n    if(allPokemons[0]!==undefined && allPokemons[0]!==null && allPokemons[0].id!==undefined && allPokemons[0].id!==null){\r\n        let startInd = (this.state.currentPageIndex-1)*this.state.endIndex;\r\n        let endInd = startInd+8; \r\n        for(let i = startInd; i<=endInd; i++){\r\n            if(visiblePoKemons[i]!==undefined && visiblePoKemons[i]!==null && visiblePoKemons[i].id!==undefined && visiblePoKemons[i].id!==null){\r\n                elements.push(<PokemonListItem  GetPokemon={() => GetPokemon(visiblePoKemons[i])} key={visiblePoKemons[i].id}  pokemon={visiblePoKemons[i]}/>)\r\n            }\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"listButtons\">\r\n        <div className=\"types\">\r\n            <button  className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Types\r\n            </button>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                {types}\r\n              </div>\r\n            </div>\r\n            <ul className=\"list-inline-item\">{elements}</ul>\r\n            <div className=\"buttonsGroup\">\r\n                <button className='btn btn-primary' onClick={this.PreviosItems}>Prev</button>\r\n                <button className='btn btn-primary'onClick={this.NextItems}>Next</button>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n            \r\n        \r\n        \r\n    )\r\n}\r\n\r\n}","import PokemonInfo from './pokemon-info';\r\n\r\nexport default  PokemonInfo; ","import React, {Component} from 'react'\r\nimport ApiService from '../../services//api-service/api-service.js'\r\nimport './pokemon-info.css'\r\nexport default class PokemonInfo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            pokemonUrl : 'https://pokeapi.co/api/v2/pokemon/1/',\r\n            pokemon: null,\r\n            loading : true\r\n        }\r\n    }\r\n    apiservice = new ApiService();\r\n    onPokemonLoaded = (currentPokemon) => {\r\n        this.setState({\r\n            pokemon: currentPokemon,\r\n            loading: false\r\n        });\r\n    }\r\n    componentDidMount() {\r\n        this.apiservice.GetPokemonByURL(this.state.pokemonUrl)\r\n        .then(pokemons => this.onPokemonLoaded(pokemons));\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.pokemon!==prevProps.pokemon){\r\n            this.setState({pokemon : this.props.pokemon,loading : false})\r\n        }\r\n    }\r\n        \r\n    \r\n\r\n    render(){\r\n        \r\n        \r\n        \r\n        const{pokemon, loading} = this.state;\r\n        let types = []\r\n        let abilities = []\r\n        let stats = []\r\n        \r\n        if(pokemon!==null){\r\n            \r\n                for(let i = 0;i<pokemon.stats.length;i++){\r\n                    stats.push(<li key={i} className=\"list-group-item-active d-flex\"><label>{pokemon.stats[i].stat.name}</label><label>{pokemon.stats[i].base_stat}</label></li>)\r\n                }\r\n\r\n             abilities = pokemon.abilities.map(item => {\r\n                if (!item.is_hidden) {\r\n                    return(\r\n                        <li key={item.slot} className=\"list-group-item-active\">\r\n                            {item.slot}. {item.ability.name}\r\n                        \r\n                        </li>\r\n                        \r\n                    );\r\n                } else {\r\n                    return(\r\n                        <li key={item.slot} className=\"list-group-item-active\">\r\n                            {item.ability.name} (hidden)\r\n                            \r\n                        </li>\r\n                    );\r\n                };\r\n            });\r\n             types = pokemon.types.map((item, i)=> {\r\n                return(\r\n                    <button key={i} type=\"button\" className=\"btn btn-warning\" disabled>\r\n                        {item.type.name.toUpperCase()}\r\n                    </button>\r\n                );\r\n            });\r\n        }\r\n        \r\n\r\n        const info = loading ? <div>loading...</div> :\r\n        <div className=\"cardInfo card mb-3\">\r\n        <div className=\"row g-0\">\r\n          <div className=\"col-md-4\">\r\n            <img className='pokImg' src={pokemon.sprites.other.dream_world.front_default} alt=\"no img\"/>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">Pokedex data</h4>\r\n              <ul className=\"infoList list-group list-group-flush d-flex\">\r\n                    <li className=\"list-group-item-active d-flex\">\r\n                        <label>National № </label>\r\n                        <label> {\" \"+pokemon.id}</label> \r\n                    </li>\r\n                    <li className=\"list-group-item-active d-flex\">\r\n                    <label>Type</label>\r\n                    {types}\r\n                    </li>\r\n                    <li className=\"list-group-item-active d-flex\">\r\n                        <label>Species</label>\r\n                        <label>{pokemon.name+\" pokemon\"}</label>\r\n                    </li>\r\n                    <li className=\"list-group-item-active d-flex\">\r\n                        <label>Height</label>\r\n                        <label>{pokemon.height/10 + \"m\"}</label> \r\n                    </li>\r\n                    <li className=\"list-group-item-active d-flex\" >\r\n                        <label>Weight</label>\r\n                        <label>{pokemon.weight/10+\"kg\"} </label>\r\n                    </li>\r\n                    \r\n                    <li className=\"list-group-item-active d-flex\">\r\n                        <label>Abilities</label>\r\n                        <ul className=\"abilities\">{abilities}</ul>\r\n                    </li>\r\n                    {stats}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n        return (\r\n            <div className=\"main\">\r\n            {info}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}","import PokemonFilter from './pokemon-filter';\r\nexport default PokemonFilter;\r\n","import React, {Component} from 'react'\r\nimport './pokemon-filter.css'\r\n\r\nexport default class PokemonFilter extends Component {\r\n constructor(props){\r\n     super(props);\r\n     this.state = {\r\n         term : '',\r\n         allTypes : []\r\n     }\r\n     this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n }\r\n onUpdateSearch(e) {\r\n     const term = e.target.value;\r\n     this.setState({\r\n         term : term\r\n     })\r\n     this.props.onUpdateSearch(term);\r\n }\r\n    render(){\r\n        return (\r\n            <input className=\"form-control search-input\"\r\n            type=\"text\"\r\n            placeholder=\"find your pokemon\"\r\n            onChange={this.onUpdateSearch}/>\r\n            \r\n        )\r\n    \r\n    }\r\n}","import React, {Component} from 'react'\r\nimport  ApiService from  '../../services/api-service/api-service.js';\r\nimport PokemonList from '../pokemons-list';\r\nimport PokemonInfo from '../pokemon-info';\r\nimport PokemonFilter from '../pokemon-filter';\r\nimport './app.css';\r\n\r\n\r\nexport default class App extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            firstPokemons: null,\r\n            pokemonUrl : 'https://pokeapi.co/api/v2/pokemon/1/',\r\n            currentPokemon : null,\r\n            term : '',\r\n            loading: true\r\n        }\r\n        this.GetPokemon = this.GetPokemon.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    apiservice = new ApiService();\r\n   \r\n    onPokemonsLoaded = (pokemons) => {\r\n        this.setState({\r\n            firstPokemons: pokemons,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.apiservice.GetFirstPokemons()\r\n                .then(pokemons => this.onPokemonsLoaded(pokemons));\r\n                this.GetPokemon(this.state.pokemonUrl);\r\n    }\r\n\r\n\r\n    GetPokemon(pokemon){\r\n        this.setState(() => {\r\n            return (\r\n                {\r\n                    currentPokemon : pokemon\r\n                }\r\n            )\r\n        });\r\n    }\r\n    onUpdateSearch(term){\r\n        this.setState({term});\r\n    }\r\n\r\n   render(){\r\n       const {firstPokemons, loading,currentPokemon, term} = this.state;\r\n       const list = loading ? <div>loading...</div> :\r\n       <div className=\"page\">\r\n       <div className=\"list\">\r\n            <PokemonFilter onUpdateSearch={this.onUpdateSearch}/>\r\n            <PokemonList GetPokemon={this.GetPokemon} pokemons={firstPokemons} term={term}/>\r\n        </div>\r\n        <div className=\"pokemonInfo\">\r\n        <PokemonInfo pokemon={currentPokemon}/>\r\n        </div>\r\n        </div>\r\n        return (\r\n            <>\r\n                {list}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport PokemonList from './components/pokemons-list'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}